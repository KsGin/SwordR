#version 450

layout (binding = 0) uniform ParameterUBO {
    float deltaTime;
    int rowParticleCount;
    int columnParticleCount;
    int count;
} ubo;

struct Particle {
    vec2 position;
    vec2 velocity;
    vec4 color;
};

layout(std140, binding = 1) readonly buffer ParticleSSBOIn {
   Particle particlesIn[ ];
};

layout(std140, binding = 2) writeonly buffer ParticleSSBOOut {
   Particle particlesOut[ ];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() 
{
    uint xIndex = gl_GlobalInvocationID.x;  
    Particle particleIn = particlesIn[xIndex];
    particlesOut[xIndex].position = particleIn.position + particleIn.velocity * ubo.deltaTime + 10;
    particlesOut[xIndex].velocity = particleIn.velocity;
    particlesOut[xIndex].color = particleIn.color;
}